(window.webpackJsonp=window.webpackJsonp||[]).push([[29],{316:function(s,e,a){"use strict";a.r(e);var n=a(10),t=Object(n.a)({},(function(){var s=this,e=s._self._c;return e("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[e("h1",{attrs:{id:"npm-与包"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#npm-与包"}},[s._v("#")]),s._v(" npm 与包")]),s._v(" "),e("h2",{attrs:{id:"简介与下载"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#简介与下载"}},[s._v("#")]),s._v(" 简介与下载")]),s._v(" "),e("blockquote",[e("p",[e("code",[s._v("node.js")]),s._v("中的第三方模块又叫做包\n下载包\n"),e("code",[s._v("npm install 包名")]),s._v("  简写："),e("code",[s._v("npm i 包名")]),s._v("\n下载指定版本的包名，用"),e("code",[s._v("@")]),s._v("符号\n"),e("code",[s._v("npm install moment@2.22.2")]),s._v("\n卸载包\n"),e("code",[s._v("npm uninstall 包名")])])]),s._v(" "),e("h2",{attrs:{id:"包的语义化版本规范"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#包的语义化版本规范"}},[s._v("#")]),s._v(" 包的语义化版本规范")]),s._v(" "),e("blockquote",[e("p",[s._v("包的版本号是以“点分十进制”形式进行定义的，总共有三位数字，例如2.24.0\n其中每一位数字所代表的的含义如下：\n第1位数字：大版本\n第2位数字：功能版本\n第3位数字：Bug修复版本\n版本号提升的规则：只要前面的版本号增长了，则后面的版本号归零")])]),s._v(" "),e("h3",{attrs:{id:"快速创建-package-json"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#快速创建-package-json"}},[s._v("#")]),s._v(" 快速创建 package.json")]),s._v(" "),e("blockquote",[e("p",[s._v("注意：\n①上述命令只能在英文的目录下成功运行！所以，项目文件夹的名称一定要使用英文命名，不要使用中文，不能出现空格。\n②运行"),e("code",[s._v("npm install")]),s._v("命令安装包的时候，"),e("code",[s._v("npm")]),s._v("包管理工具会自动把包的名称和版本号，记录到"),e("code",[s._v("package.json")]),s._v("中。")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("// 作用：在执行命令所处的目录中，快速新键package.json文件\nnpm init -y\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br")])]),e("h3",{attrs:{id:"devdependencies-节点"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#devdependencies-节点"}},[s._v("#")]),s._v(" devDependencies 节点")]),s._v(" "),e("blockquote",[e("div",{staticClass:"language- extra-class"},[e("pre",[e("code",[s._v("     如果某些包只在项目开发阶段会用到，在项目上线之后不会用到，则建议把这些包记录到`devDependencies`节点中。与之对应的，如果某些包在开发和项目上线之后都需要用到，则建议把这些包记录到`dependencies`节点中。\n    可以使用如下的命令，将包记录到`devDependencies`节点中：\n")])])])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("// 安装指定的包，并i记录到devDependencies节点中\nnpm i 包名 -D\n// 注意：上述命令是简写形试，等价于下面完的写法\nnpm i 包名 --save-dev\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br")])]),e("h3",{attrs:{id:"规范的包结构"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#规范的包结构"}},[s._v("#")]),s._v(" 规范的包结构")]),s._v(" "),e("blockquote",[e("p",[s._v("一个规范的包，它的组成结构，必须符合以下3点要求：\n① 包必须以单独的目录而存在\n② 包的顶级目录下要必须包含"),e("code",[s._v("package.jso")]),s._v("n这个包管理配置文件\n③ "),e("code",[s._v("package.json")]),s._v("中必须包含"),e("code",[s._v("name")]),s._v(","),e("code",[s._v("version")]),s._v(","),e("code",[s._v("main")]),s._v("这三个属性，分别代表包的名字、版本号、包的入口.")])]),s._v(" "),e("h2",{attrs:{id:"切换npm的下包镜像源"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#切换npm的下包镜像源"}},[s._v("#")]),s._v(" 切换npm的下包镜像源")]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("// 查看当前的下包镜像源\nnpm config get registry\n// 将下包的镜像源切换为淘宝镜像源\nnpm config set registry=https://registry.npm.taobao.org/\n// 检查镜像源是否下载成功\nnpm config get registry\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br")])]),e("h3",{attrs:{id:"nrm"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#nrm"}},[s._v("#")]),s._v(" nrm")]),s._v(" "),e("blockquote",[e("p",[s._v("为了更方便的切换下包的镜像源，我们可以安装"),e("code",[s._v("nrm")]),s._v("这个小工具，利用"),e("code",[s._v("nrm")]),s._v("提供的终端命令，可以快速查看和切换下包的镜像源。")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("// 通过npm包管理器，将nrm安装为全局可用的工具\nnpm i nrm -g\n// 查看所有可用的镜修源\nnrm ls\n// 将下包的镜修源切换为taobao镜像\nnrm use taobao\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br")])]),e("h2",{attrs:{id:"moment-操作时间"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#moment-操作时间"}},[s._v("#")]),s._v(" moment 操作时间")]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("npm i moment\n\n// 时间格式化\nmoment().format("),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'YYYY-MM-DD HH-mm-ss'")]),s._v(")\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br")])]),e("h2",{attrs:{id:"i5ting-toc"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#i5ting-toc"}},[s._v("#")]),s._v(" i5ting_toc")]),s._v(" "),e("blockquote",[e("p",[e("code",[s._v("i5ting_toc")]),s._v("是一个可以把"),e("code",[s._v("md")]),s._v("文档转为"),e("code",[s._v("html")]),s._v("页面的小工具，使用步骤如下：")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#将15 ting toc安装为全局包")]),s._v("\nnpm install -g isting_toc\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#调用i5 ting_toc, 轻松实现 md 转 html 的功能")]),s._v("\ni5 ting_toc -f 要转换的md文件路径 -o\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br")])]),e("h2",{attrs:{id:"开发属于自己的包"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#开发属于自己的包"}},[s._v("#")]),s._v(" 开发属于自己的包")]),s._v(" "),e("h3",{attrs:{id:"初始化包的基本结构"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#初始化包的基本结构"}},[s._v("#")]),s._v(" 初始化包的基本结构")]),s._v(" "),e("blockquote",[e("p",[s._v("新建"),e("code",[s._v("itheima-tools")]),s._v("文件夹，作为包的根目录\n在"),e("code",[s._v("itheima-tools")]),s._v("文件夹中，新建如下三个文件：")]),s._v(" "),e("ul",[e("li",[e("code",[s._v("package.json")]),s._v("(包管理配置文件)")]),s._v(" "),e("li",[e("code",[s._v("index.js")]),s._v("(包的入口文件)")]),s._v(" "),e("li",[e("code",[s._v("README.md")]),s._v("(包的说明文档)")])])]),s._v(" "),e("p",[s._v("发布包的步骤："),e("br"),s._v("1）初始化"),e("code",[s._v("package.json")]),e("br"),s._v("2）创建"),e("code",[s._v("index.js")]),s._v("，编写相关代码"),e("br"),s._v("3）控制台登录"),e("code",[s._v("npm")]),s._v("，命令："),e("code",[s._v("npm login")]),s._v("，注意"),e("code",[s._v("npm")]),s._v("的镜像源一定是"),e("code",[s._v("npm")]),s._v("官网的"),e("br"),s._v("4）切换到包的根目录，发布包，命令："),e("code",[s._v("npm publish")])]),s._v(" "),e("h3",{attrs:{id:"初始化package-json"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#初始化package-json"}},[s._v("#")]),s._v(" 初始化package.json")]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("{\n  "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"name"')]),s._v(": "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"cwg-utils"')]),s._v(",   // 名字\n  "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"version"')]),s._v(": "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"1.0.0"')]),s._v(",  // 版本\n  "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"main"')]),s._v(": "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"index.js"')]),s._v(",  //  包的入口文件\n  "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"description"')]),s._v(": "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"cwg创建包"')]),s._v(",  // 描述\n  "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"keywords"')]),s._v(": ["),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"cwg"')]),s._v(", "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"utils"')]),s._v("], // 检索的关键词\n  "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"license"')]),s._v(": "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"ISC"')]),s._v("  // 遵循的开源协议\n}\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br")])]),e("h3",{attrs:{id:"登录npm-控制台登录"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#登录npm-控制台登录"}},[s._v("#")]),s._v(" 登录npm(控制台登录)")]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("npm login\n// 输入\n// username: caiwenguo\n// passwird: 173********i \n// email: 501615956@qq.com\n// emailCode: ******  // 邮箱验证吗\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br")])]),e("h3",{attrs:{id:"发布包"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#发布包"}},[s._v("#")]),s._v(" 发布包")]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("// 切换到包的跟目录\nnpm publish\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br")])]),e("h3",{attrs:{id:"删除包"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#删除包"}},[s._v("#")]),s._v(" 删除包")]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("npm unpublish 包名 --force\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br")])]),e("blockquote",[e("p",[s._v("① npm unpublish命令只能删除72小时以内发布的包\n② npm unpublish删除的包，在24小时内不允许重复发布\n③ 发布包的时候要慎重，尽量不要往pm上发布没有意义的包！")])]),s._v(" "),e("h2",{attrs:{id:"模块的加载机制"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#模块的加载机制"}},[s._v("#")]),s._v(" 模块的加载机制")]),s._v(" "),e("h3",{attrs:{id:"优先从缓存中加载"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#优先从缓存中加载"}},[s._v("#")]),s._v(" 优先从缓存中加载")]),s._v(" "),e("blockquote",[e("p",[s._v("模块在第一次加载后会被缓存。这也意味着多次调用"),e("code",[s._v("require()")]),s._v("不会导致模块的代码被执行多次。\n注意：不论是内置模块、用户自定义模块、还是第三方模块，它们都会优先从缓存中加载，从而提高模块的加载效率。")])]),s._v(" "),e("h3",{attrs:{id:"内置模块的加载机制"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#内置模块的加载机制"}},[s._v("#")]),s._v(" 内置模块的加载机制")]),s._v(" "),e("blockquote",[e("p",[s._v("内置模块是由"),e("code",[s._v("Node.js")]),s._v("官方提供的模块，内置模块的加载优先级最高。\n例如，"),e("code",[s._v("require('fs')")]),s._v("始终返回内置的"),e("code",[s._v("fs")]),s._v("模块，即使在"),e("code",[s._v("node modules")]),s._v("目录下有名字相同的包也叫做fs。")])]),s._v(" "),e("h3",{attrs:{id:"自定义模块的加载机制"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#自定义模块的加载机制"}},[s._v("#")]),s._v(" 自定义模块的加载机制")]),s._v(" "),e("blockquote",[e("p",[s._v("使用"),e("code",[s._v("require()")]),s._v("加载自定义模块时，必须指定以/或/开头的路径标识符。在加载自定义模块时，如果没有指定"),e("code",[s._v("/")]),s._v("或"),e("code",[s._v("./")]),s._v("这样的路径标识符，则"),e("code",[s._v("node")]),s._v("会把它当作内置模块或第三方模块进行加载。\n同时，在使用"),e("code",[s._v("require()")]),s._v("导入自定义模块时，如果省略了文件的扩展名，则"),e("code",[s._v("Node.js")]),s._v("会按顺序分别尝试加载以下的文件：\n① 按照确切的文件名进行加载\n② 补全"),e("code",[s._v(".js")]),s._v("扩展名进行加载\n③ 补全"),e("code",[s._v(".json")]),s._v("扩展名进行加载\n④ 补全"),e("code",[s._v(".node")]),s._v("扩展名进行加载\n⑤ 加载失败，终端报错")])]),s._v(" "),e("h3",{attrs:{id:"第三方模块的加载机制"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#第三方模块的加载机制"}},[s._v("#")]),s._v(" 第三方模块的加载机制")]),s._v(" "),e("blockquote",[e("p",[s._v("如果传递给"),e("code",[s._v("require()")]),s._v("的模块标识符不是一个内置模块，也没有以"),e("code",[s._v("./")]),s._v("或"),e("code",[s._v("/")]),s._v("开头，则"),e("code",[s._v("Node.js")]),s._v("会从当前模块的父目录开始，尝试从"),e("code",[s._v("/node_modules")]),s._v("文件夹中加载第三方模块。\n如果没有找到对应的第三方模块，则移动到再上一层父目录中，进行加载，直到文件系统的根目录。\n例如，假设在"),e("code",[s._v("C:\\Users\\itheima\\project\\foo.js")]),s._v("文件里调用了"),e("code",[s._v("require('tools')")]),s._v(",则"),e("code",[s._v("Node.js")]),s._v("会按以下顺序查找：\n① "),e("code",[s._v("C:\\Users\\itheima\\project\\node modules\\tools")]),s._v("\n② "),e("code",[s._v("C:\\Users\\itheima\\node_modules\\tools")]),s._v("\n③ "),e("code",[s._v("C:\\Users\\node_modules\\tools")]),s._v("\n④ "),e("code",[s._v("C:\\node_modules\\tools")]),s._v("\n⑤ 加载失败，终端报错")])]),s._v(" "),e("h3",{attrs:{id:"目录作为模块加载机制"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#目录作为模块加载机制"}},[s._v("#")]),s._v(" 目录作为模块加载机制")]),s._v(" "),e("blockquote",[e("p",[s._v("当把目录作为模块标识符，传递给"),e("code",[s._v("require()")]),s._v("进行加载的时候，有三种加载方式\n①在被加载的目录下查找一个叫做"),e("code",[s._v("package.json")]),s._v("的文件，并得找"),e("code",[s._v("main")]),s._v("属性，作为"),e("code",[s._v("require()")]),s._v("加载的入口\n②如果目录里没有"),e("code",[s._v("package.json")]),s._v("文件，或诸"),e("code",[s._v("main")]),s._v("入口不存在或无法解析，则"),e("code",[s._v("Node.js")]),s._v("将会试图加载目录下的"),e("code",[s._v("index.js")]),s._v("文件。\n③如果以上两步都失败了，则Node.js会在终端打印错误消息，报告模块的缺失："),e("code",[s._v("Error:.Cannot find module '***'")])])])])}),[],!1,null,null,null);e.default=t.exports}}]);