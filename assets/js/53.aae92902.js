(window.webpackJsonp=window.webpackJsonp||[]).push([[53],{339:function(v,e,_){"use strict";_.r(e);var t=_(10),a=Object(t.a)({},(function(){var v=this,e=v._self._c;return e("ContentSlotsDistributor",{attrs:{"slot-key":v.$parent.slotKey}},[e("h1",{attrs:{id:"vue面试题"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#vue面试题"}},[v._v("#")]),v._v(" Vue面试题")]),v._v(" "),e("h2",{attrs:{id:"vue怎么进行双向数据绑定-双向数据绑定的原理是什么"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#vue怎么进行双向数据绑定-双向数据绑定的原理是什么"}},[v._v("#")]),v._v(" "),e("code",[v._v("Vue")]),v._v("怎么进行双向数据绑定，双向数据绑定的原理是什么？")]),v._v(" "),e("ul",[e("li",[v._v("使用"),e("code",[v._v("v-model")]),v._v("进行双向绑定")]),v._v(" "),e("li",[v._v("原理:采用数据劫持，结合发布者-订阅者模式的方式，通过"),e("code",[v._v("Object.defineProperty()")]),v._v("来劫持各个属性的"),e("code",[v._v("setter/getter")]),v._v("，在数据变动时发布消息给订阅者，触发相应监听回调。")]),v._v(" "),e("li",[v._v("当把一个普通 "),e("code",[v._v("js")]),v._v("对象传给 "),e("code",[v._v("Vue")]),v._v(" 实例来作为它的 "),e("code",[v._v("data")]),v._v(" 选项时，"),e("code",[v._v("Vue")]),v._v(" 将遍历它的属性，用 "),e("code",[v._v("Object.defineProperty()")]),v._v(" 将它们转为 "),e("code",[v._v("setter/getter")]),v._v("。")]),v._v(" "),e("li",[v._v("用户看不到 "),e("code",[v._v("setter/getter")]),v._v("，但是在内部它们让 "),e("code",[v._v("Vue")]),v._v(" 追踪依赖，在属性被访问和修改")])]),v._v(" "),e("h2",{attrs:{id:"v-if和v-show有什么区别"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#v-if和v-show有什么区别"}},[v._v("#")]),v._v(" "),e("code",[v._v("v-if")]),v._v("和"),e("code",[v._v("v-show")]),v._v("有什么区别?")]),v._v(" "),e("ul",[e("li",[e("code",[v._v("v-if")]),v._v(" 当值为"),e("code",[v._v("true")]),v._v("，元素添加，值为"),e("code",[v._v("false")]),v._v("，元素删除，如果用在组件上,会调用组件的生命周期函数")]),v._v(" "),e("li",[e("code",[v._v("v-show")]),v._v(" 当值为"),e("code",[v._v("true")]),v._v("，元素显示，值为"),e("code",[v._v("false")]),v._v("，为元素添加了一个"),e("code",[v._v("display:none")]),v._v("属性")])]),v._v(" "),e("blockquote",[e("p",[v._v("当需要频繁显示一个元素时建议使用"),e("code",[v._v("v-show")]),v._v("，如果不需要可以使用"),e("code",[v._v("v-if")])])]),v._v(" "),e("h2",{attrs:{id:"data为什么必须为函数"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#data为什么必须为函数"}},[v._v("#")]),v._v(" "),e("code",[v._v("data")]),v._v("为什么必须为函数")]),v._v(" "),e("ul",[e("li",[v._v("确保每一个组件独享一个数据对象，而不是共享一个数据对象")])]),v._v(" "),e("h2",{attrs:{id:"watch和computed的区别什么"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#watch和computed的区别什么"}},[v._v("#")]),v._v(" "),e("code",[v._v("watch")]),v._v("和"),e("code",[v._v("computed")]),v._v("的区别什么")]),v._v(" "),e("ul",[e("li",[e("code",[v._v("watch")]),v._v("监听属性，一旦属性值发生改变立马调用")]),v._v(" "),e("li",[e("code",[v._v("computed")]),v._v("计算属性，一旦构成属性的任意一块内容发生改变立马重新计算，需要一个返回值")])]),v._v(" "),e("h2",{attrs:{id:"keep-alive的作用是什么"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#keep-alive的作用是什么"}},[v._v("#")]),v._v(" "),e("code",[v._v("keep-alive")]),v._v("的作用是什么")]),v._v(" "),e("ul",[e("li",[v._v("保持组件存活，即便组件消失也不移除")])]),v._v(" "),e("h2",{attrs:{id:"什么是mvvm"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#什么是mvvm"}},[v._v("#")]),v._v(" 什么是"),e("code",[v._v("MVVM")])]),v._v(" "),e("blockquote",[e("p",[e("code",[v._v("MVVM")]),v._v("是一种设计模式")])]),v._v(" "),e("p",[e("code",[v._v("M")]),v._v("："),e("code",[v._v("model")]),v._v("数据模型,为页面显示的数据"),e("br"),v._v(" "),e("code",[v._v("V")]),v._v("："),e("code",[v._v("view")]),v._v("视图,为当前页面"),e("br"),v._v(" "),e("code",[v._v("VM")]),v._v("："),e("code",[v._v("viewModel")]),v._v(",监听数据变化，用户交互的内容，实质就是一个视图控制器"),e("code",[v._v("Controller")]),e("br")]),v._v(" "),e("h2",{attrs:{id:"vue生命周期钩子函数有哪些"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#vue生命周期钩子函数有哪些"}},[v._v("#")]),v._v(" "),e("code",[v._v("Vue")]),v._v("生命周期钩子函数有哪些")]),v._v(" "),e("ul",[e("li",[e("code",[v._v("beforeCreate")]),v._v(" \t组件创建之间")]),v._v(" "),e("li",[e("code",[v._v("Created")]),v._v("\t \t组件创建以后")]),v._v(" "),e("li",[e("code",[v._v("beforeMount")]),v._v("  \t组件渲染之前")]),v._v(" "),e("li",[e("code",[v._v("Mounted")]),v._v("  \t\t组件渲染以后")]),v._v(" "),e("li",[e("code",[v._v("beforeUpdate")]),v._v("  \t组件更新之前")]),v._v(" "),e("li",[e("code",[v._v("Updated")]),v._v("  \t\t组件更新以后")]),v._v(" "),e("li",[e("code",[v._v("beforeDestroy")]),v._v("  \t组件摧毁之前")]),v._v(" "),e("li",[e("code",[v._v("Destroyed")]),v._v(" \t\t组件摧毁以后")]),v._v(" "),e("li",[e("code",[v._v("Activated")]),v._v(" (艾克提未忒特)\t\t组件激活 （配合keep-alive使用）")]),v._v(" "),e("li",[e("code",[v._v("Deactivated")]),v._v(" \t组件未激活（配合keep-alive使用）")])]),v._v(" "),e("h2",{attrs:{id:"vue组件之间数据传递的方式有几种-怎么进行传递"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#vue组件之间数据传递的方式有几种-怎么进行传递"}},[v._v("#")]),v._v(" "),e("code",[v._v("Vue")]),v._v("组件之间数据传递的方式有几种，怎么进行传递")]),v._v(" "),e("ul",[e("li",[v._v("父传子: 子组件通过"),e("code",[v._v("props")]),v._v("方式接受")]),v._v(" "),e("li",[v._v("子传父：子组件发射一个事件"),e("code",[v._v("$emit")]),v._v(",父组件接受事件以后调用相应的函数")]),v._v(" "),e("li",[v._v("非父子: 使用一个空的Vue对象在第一个组件的点击事件中，使用"),e("code",[v._v("$emit")]),v._v("方式来发射事件，在第二个组件的"),e("code",[v._v("mounted")]),v._v("函数里面使用"),e("code",[v._v("$on")]),v._v("来接收事件")])]),v._v(" "),e("h2",{attrs:{id:"三种路由传值"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#三种路由传值"}},[v._v("#")]),v._v(" 三种路由传值？")]),v._v(" "),e("ul",[e("li",[v._v("在路径后面使用： 声明一个变量，调用路径后面跟一个参数  拿到值的话 this.$route.params.变量名，")]),v._v(" "),e("li",[v._v("使用path来匹配路由，然后通过query来传递参数 ， 拿到值要 this.$route.qurey.变量名")]),v._v(" "),e("li",[v._v("使用name名来匹配路由，要使用params来传递参数，拿到值的话使用this.$route.params.变量名")])]),v._v(" "),e("h2",{attrs:{id:"vue当中的事件修饰符有哪些"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#vue当中的事件修饰符有哪些"}},[v._v("#")]),v._v(" "),e("code",[v._v("Vue")]),v._v("当中的事件修饰符有哪些？")]),v._v(" "),e("ul",[e("li",[e("code",[v._v(".once")]),v._v("表示点击事件只调用一次")]),v._v(" "),e("li",[e("code",[v._v(".prevent")]),v._v("表示阻止默认事件提交")]),v._v(" "),e("li",[e("code",[v._v(".stop")]),v._v("阻止事件传递"),e("br"),v._v("\n······")])]),v._v(" "),e("h2",{attrs:{id:"路由当中的hash-哈希-模式和history-历史-模式有什么区别"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#路由当中的hash-哈希-模式和history-历史-模式有什么区别"}},[v._v("#")]),v._v(" 路由当中的"),e("code",[v._v("hash")]),v._v("（哈希）模式和"),e("code",[v._v("history")]),v._v("（历史）模式有什么区别？")]),v._v(" "),e("ul",[e("li",[e("code",[v._v("Hash")]),v._v(": "),e("code",[v._v("url")]),v._v("地址后面会跟一个#，地址切换不会导致页面请求")]),v._v(" "),e("li",[e("code",[v._v("History")]),v._v(": 地址后面没有#，地址切换会导致页面请求")])]),v._v(" "),e("h2",{attrs:{id:"vue-router的钩子函数有哪些"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#vue-router的钩子函数有哪些"}},[v._v("#")]),v._v(" "),e("code",[v._v("Vue-Router")]),v._v("的钩子函数有哪些")]),v._v(" "),e("ol",[e("li",[e("strong",[v._v("全局守卫")])])]),v._v(" "),e("ul",[e("li",[v._v("beforeEach \t全局前置守卫")]),v._v(" "),e("li",[v._v("beforeResolve\t全局解析守卫")]),v._v(" "),e("li",[v._v("afterEach   \t全局后置守卫")])]),v._v(" "),e("ol",{attrs:{start:"2"}},[e("li",[e("strong",[v._v("独享守卫")])])]),v._v(" "),e("ul",[e("li",[v._v("beforeEnter")])]),v._v(" "),e("ol",{attrs:{start:"3"}},[e("li",[e("strong",[v._v("组件内守卫")])])]),v._v(" "),e("ul",[e("li",[v._v("beforeRouteEnter\t\t组件前置守卫  (该守卫没有this)")]),v._v(" "),e("li",[v._v("beforeRouteUpdate   \t路由改变但是组件被复用时")]),v._v(" "),e("li",[v._v("beforeRouteLeave    \t组件后置守卫")])]),v._v(" "),e("h2",{attrs:{id:"vue当中的状态管理的作用-以及属性的作用是什么"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#vue当中的状态管理的作用-以及属性的作用是什么"}},[v._v("#")]),v._v(" Vue当中的状态管理的作用，以及属性的作用是什么")]),v._v(" "),e("blockquote",[e("p",[e("code",[v._v("Vuex")]),v._v("状态管理是为了统一管理页面所需要的数据，并能够在整个项目当中任意地方来使用这个数据，有5个属性")])]),v._v(" "),e("ul",[e("li",[e("code",[v._v("State")]),v._v("：用来存放初始数据")]),v._v(" "),e("li",[e("code",[v._v("Mutations")]),v._v("：同步方法，用来修改"),e("code",[v._v("state")]),v._v("值")]),v._v(" "),e("li",[e("code",[v._v("Actions")]),v._v("：异步方法，需要调用"),e("code",[v._v("Mutations")]),v._v("中方法来修改"),e("code",[v._v("State")]),v._v("值")]),v._v(" "),e("li",[e("code",[v._v("Getters")]),v._v("：计算属性，类似于组件当中的"),e("code",[v._v("computed")]),v._v("属性")]),v._v(" "),e("li",[e("code",[v._v("Modules")]),v._v("：用来管理其他的"),e("code",[v._v("Vuex")]),v._v("对象")])]),v._v(" "),e("h2",{attrs:{id:"vue什么是动态组件"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#vue什么是动态组件"}},[v._v("#")]),v._v(" Vue什么是动态组件？")]),v._v(" "),e("ul",[e("li",[e("code",[v._v('<component :is=""></component>')]),v._v(" 根据"),e("code",[v._v("is")]),v._v("属性的值来决定成为什么组件")])]),v._v(" "),e("h2",{attrs:{id:"vue中按键修饰符"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#vue中按键修饰符"}},[v._v("#")]),v._v(" Vue中按键修饰符")]),v._v(" "),e("p",[e("code",[v._v("enter")]),v._v("、"),e("code",[v._v("tab")]),v._v("、"),e("code",[v._v("delete")]),v._v("、"),e("code",[v._v("esc")]),v._v("、"),e("code",[v._v("space")]),v._v("、"),e("code",[v._v("up")]),v._v("、"),e("code",[v._v("down")]),v._v("、"),e("code",[v._v("left")]),v._v("、"),e("code",[v._v("right")])]),v._v(" "),e("h2",{attrs:{id:"vue项目当中怎么解决跨域问题"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#vue项目当中怎么解决跨域问题"}},[v._v("#")]),v._v(" "),e("code",[v._v("Vue")]),v._v("项目当中怎么解决跨域问题？")]),v._v(" "),e("p",[v._v("在vue.config.js文件中设置proxy属性")]),v._v(" "),e("h2",{attrs:{id:"vue项目怎么打包app"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#vue项目怎么打包app"}},[v._v("#")]),v._v(" "),e("code",[v._v("Vue")]),v._v("项目怎么打包"),e("code",[v._v("app")])]),v._v(" "),e("ol",[e("li",[v._v("使用命令"),e("code",[v._v("npm run build")]),v._v(" 生成一个dist文件夹")]),v._v(" "),e("li",[v._v("使用"),e("code",[v._v("hbuilder")]),v._v("创建一个"),e("code",[v._v("5+app")]),v._v("项目，选择默认模板")]),v._v(" "),e("li",[v._v("用dist文件夹里面的东西来替换"),e("code",[v._v("hbuilder")]),v._v("创建的项目里面的内容")]),v._v(" "),e("li",[v._v("选择原生app-云打包")])]),v._v(" "),e("h2",{attrs:{id:"vant、element组件库分别有什么区别"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#vant、element组件库分别有什么区别"}},[v._v("#")]),v._v(" "),e("code",[v._v("vant")]),v._v("、"),e("code",[v._v("element")]),v._v("组件库分别有什么区别")]),v._v(" "),e("ul",[e("li",[e("code",[v._v("vant")]),v._v("：主要做移动端商城类项目")]),v._v(" "),e("li",[e("code",[v._v("element")]),v._v(":是主要做pc端网页")]),v._v(" "),e("li",[e("code",[v._v("amaze")]),v._v("：主要做移动端")])]),v._v(" "),e("h2",{attrs:{id:"vue全家桶一般都有什么-作用是什么"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#vue全家桶一般都有什么-作用是什么"}},[v._v("#")]),v._v(" "),e("code",[v._v("vue")]),v._v("全家桶一般都有什么，作用是什么")]),v._v(" "),e("ul",[e("li",[e("code",[v._v("Vue-router")]),v._v(" 路由管理 创建配置路由")]),v._v(" "),e("li",[e("code",[v._v("Vuex")]),v._v(" 状态管理 统一管理 页面所需的数据  供全局使用")]),v._v(" "),e("li",[e("code",[v._v("Vue-cli")]),v._v(" 用来搭建vue项目")]),v._v(" "),e("li",[e("code",[v._v("Axios")]),v._v(" 用来数据请求")])])])}),[],!1,null,null,null);e.default=a.exports}}]);